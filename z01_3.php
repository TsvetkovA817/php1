<?php
    $a = 5;
    $b = '05';
    var_dump($a == $b);         // Почему true?
	/*
    Получаем bool(true). Тип boolean, значение true. Результат Истина, они равны.

    var_dump — Выводит информацию о входном параметре, включая тип и значение.
    Результат операции сравнения на равенство значений ==, есть значение логического типа.
    Значит на вход функции подается логический тип boolean, он может быть либо true либо false в зависимости от результата сравнения операндов.

    Значение true, потому что  переменная a -это целое число 5, тип int,
    переменная b - это строковая переменная "05" неявно преобразовалась в тип int
    во время операции сравнения значений == переменных.  Неявное преобразование стало возможным
    потому что это php и переменная b  состоит только из цифр, получаем из '05' цифру 05, которая равна = 5, по правилам  арифметики, левые незначащие нули отбрасываются (5 также равно 005, 00005 и т.д.).
     */

    var_dump((int)'012345');     // Почему 12345?
    /*
    Получаем int(12345). Тип целое, значение 12345. Результат число = 12345.
    Здесь явное преобразование строки в целое число, незначащий левый ноль отбрасывается, строка состоит только из цифр.
    */
    var_dump((float)123.0 === (int)123.0); // Почему false?
/*
    Получаем bool(false). Тип boolean, значение false. Результат ложь, два операнда не равны друг другу.
    Здесь явное преобразование вещественного числа в целое (int) справа, значение равно 123, тип int.
    и слева преобразование вещественного числа в тип float, значение равно 123.0, тип float.
    После преобразований командой ===  выполняется сравнение на равенство значений и типов двух опреандов.
    типы разные, они не равны, поэтому результат Ложь.
    в тоже время:
    var_dump((float)123.0 == (int)123.0); // Получим bool(true), сравниваются на равенство только значения.
    т.е. 123.0000 = 123, что соответствует правилам арифметики.

 */


    var_dump((int)0 === (int)'hello, world'); // Почему true?

/*
    Здесь у нас справа выполняется явное преобразование строки в целое число, однако в строке, к сожалению,
    нет ни одной цифры, и по правилам php получаем 0 и тип int.
    Слева, тоже стоит 0 тип int. Команда ===  выполняет сравнение на равенство значений и типов двух опреандов.
    Значения и их типы равны, получаем bool(true).
    аналогично:
    var_dump((int)0 === (int)'0hello, world');  //  true
    var_dump((int)5 === (int)'5hello, world');  //  true
    var_dump((int)1 === (int)'hello, 1 world'); //  false
    var_dump((int)0 === (int)'hello, 0 world'); //  true

 */

?>